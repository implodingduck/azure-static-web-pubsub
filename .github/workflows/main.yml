# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # - name: Install Node
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'
      
      # - name: 'Install Azure Function Core Tools'
      #   run: 'npm i -g azure-functions-core-tools@3'
      # - name: 'Install WebJobs bundle'
      #   run: |
      #     npm i -g azure-functions-core-tools@3
      #     cd function
      #     func extensions install --package Microsoft.Azure.WebJobs.Extensions.WebPubSub

      - name: HashiCorp - Setup Terraform
        # You may pin to the exact commit or the version.
        # uses: hashicorp/setup-terraform@d22444889af304a44b997011fbabb81ff705a7b4
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: latest

      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ secrets.KV_NAME }}
          secrets: 'container-name, resource-group-name, storage-account-name, subscription-id, ARM-TENANT-ID, ARM-CLIENT-ID, ARM-CLIENT-SECRET'  # comma separated list of secret keys that need to be fetched from the Key Vault 
        id: kvAction

      - name: plan terraform
        env:
          ARM_CLIENT_ID: ${{ steps.kvAction.outputs.ARM-CLIENT-ID }}
          ARM_CLIENT_SECRET: ${{ steps.kvAction.outputs.ARM-CLIENT-SECRET }}
          ARM_TENANT_ID: ${{ steps.kvAction.outputs.ARM-TENANT-ID }}
          TF_VAR_container_name: ${{ steps.kvAction.outputs.container-name }}
          TF_VAR_resource_group_name: ${{ steps.kvAction.outputs.resource-group-name }}
          TF_VAR_storage_account_name: ${{ steps.kvAction.outputs.storage-account-name }}
          TF_VAR_subscription_id: ${{ steps.kvAction.outputs.subscription-id }}
          TF_VAR_key: ${{ github.repository }}.tfstate
          TF_VAR_gh_repo: ${{ github.repository }}
        run: |
            echo "starting..."
            cd terraform
            ./env_setup.sh
            terraform init --backend-config=backend.tfvars
            terraform plan -out theplan

      - name: apply terraform
        id: applyterraform
        env:
          ARM_CLIENT_ID: ${{ steps.kvAction.outputs.ARM-CLIENT-ID }}
          ARM_CLIENT_SECRET: ${{ steps.kvAction.outputs.ARM-CLIENT-SECRET }}
          ARM_TENANT_ID: ${{ steps.kvAction.outputs.ARM-TENANT-ID }}
          TF_VAR_container_name: ${{ steps.kvAction.outputs.container-name }}
          TF_VAR_resource_group_name: ${{ steps.kvAction.outputs.resource-group-name }}
          TF_VAR_storage_account_name: ${{ steps.kvAction.outputs.storage-account-name }}
          TF_VAR_subscription_id: ${{ steps.kvAction.outputs.subscription-id }}
          TF_VAR_key: ${{ github.repository }}.tfstate
          TF_VAR_gh_repo: ${{ github.repository }}
        run: |
            echo "starting..."
            cd terraform
            #terraform destroy -auto-approve
            terraform apply -auto-approve theplan
            

      - name: static webapp deploy
        id: staticwebapps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.SWA_TOKEN }}
          action: "upload"
          app_location: "staticwebapp"
          api_location: "function"
          api_build_command: "npm run build"
          skip_app_build: true
        